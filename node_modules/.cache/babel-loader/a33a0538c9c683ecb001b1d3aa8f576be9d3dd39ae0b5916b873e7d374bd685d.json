{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xXx\\\\Desktop\\\\JS\\\\udemy-practic\\\\src\\\\components\\\\Costs\\\\Costs.js\",\n  _s = $RefreshSig$();\nimport CostItem from \"../CostItem/CostItem\";\nimport CostFilter from \"../CostFilter/CostFilter\";\nimport CostList from \"../CostList/CostList\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Costs(props) {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(\"All\");\n  const yearChangeHandler = year => {\n    setSelectedYear(year);\n  };\n  const FilteredItems = props.items.filter(item => selectedYear === \"All\" || item.date.getFullYear() == selectedYear);\n\n  /*  const RenderCostItem = () => {\r\n      let ConstContent = <p>Список пуст. Давай шекели!!!</p>;\r\n  \r\n      if(FilteredItems.length) \r\n        ConstContent = FilteredItems.map((item) => \r\n          <CostItem key={item.id} props={item} />);\r\n  \r\n      return ConstContent;\r\n    };*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CostFilter, {\n      items: props.items,\n      onChangeYear: yearChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CostList, {\n      FilteredItems: FilteredItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Costs, \"jrhxZDyxD+RADTks+3S8WVKbfMs=\");\n_c = Costs;\nexport default Costs;\nvar _c;\n$RefreshReg$(_c, \"Costs\");","map":{"version":3,"names":["CostItem","CostFilter","CostList","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Costs","props","_s","selectedYear","setSelectedYear","yearChangeHandler","year","FilteredItems","items","filter","item","date","getFullYear","children","onChangeYear","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xXx/Desktop/JS/udemy-practic/src/components/Costs/Costs.js"],"sourcesContent":["import CostItem from \"../CostItem/CostItem\";\r\nimport CostFilter from \"../CostFilter/CostFilter\";\r\nimport CostList from \"../CostList/CostList\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Costs(props) {\r\n  const [selectedYear, setSelectedYear] = useState(\"All\");\r\n\r\n  const yearChangeHandler = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  const FilteredItems = props.items\r\n    .filter((item) => selectedYear === \"All\" || \r\n    item.date.getFullYear() == selectedYear);\r\n\r\n/*  const RenderCostItem = () => {\r\n    let ConstContent = <p>Список пуст. Давай шекели!!!</p>;\r\n\r\n    if(FilteredItems.length) \r\n      ConstContent = FilteredItems.map((item) => \r\n        <CostItem key={item.id} props={item} />);\r\n\r\n    return ConstContent;\r\n  };*/\r\n\r\n\r\n  return (\r\n    <>\r\n      <CostFilter items={props.items} onChangeYear={yearChangeHandler} />\r\n      <CostList FilteredItems={FilteredItems}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Costs;\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,aAAa,GAAGN,KAAK,CAACO,KAAK,CAC9BC,MAAM,CAAEC,IAAI,IAAKP,YAAY,KAAK,KAAK,IACxCO,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,IAAIT,YAAY,CAAC;;EAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACEN,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA,CAACJ,UAAU;MAACe,KAAK,EAAEP,KAAK,CAACO,KAAM;MAACM,YAAY,EAAET;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnErB,OAAA,CAACH,QAAQ;MAACa,aAAa,EAAEA;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACzC,CAAC;AAEP;AAAChB,EAAA,CA5BQF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}