{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xXx\\\\Desktop\\\\JS\\\\udemy-practic\\\\src\\\\components\\\\Costs\\\\Costs.js\",\n  _s = $RefreshSig$();\nimport CostItem from \"../CostItem/CostItem\";\nimport CostFilter from \"../CostFilter/CostFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Costs(props) {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(\"All\");\n  const yearChangeHandler = year => {\n    setSelectedYear(year);\n    ;\n  };\n  const FilteredItems = props.items.filter(item => selectedYear === \"All\" || item.date.getFullYear() == selectedYear);\n  let ConstContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0443\\u0441\\u0442. \\u0414\\u0430\\u0432\\u0430\\u0439 \\u0448\\u0435\\u043A\\u0435\\u043B\\u0438!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 22\n  }, this);\n  if (!FilteredItems.length) ConstContent = FilteredItems.map(item => /*#__PURE__*/_jsxDEV(CostItem, {\n    props: item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CostFilter, {\n      items: props.items,\n      onChangeYear: yearChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), ConstContent]\n  }, void 0, true);\n}\n_s(Costs, \"jrhxZDyxD+RADTks+3S8WVKbfMs=\");\n_c = Costs;\nexport default Costs;\nvar _c;\n$RefreshReg$(_c, \"Costs\");","map":{"version":3,"names":["CostItem","CostFilter","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Costs","props","_s","selectedYear","setSelectedYear","yearChangeHandler","year","FilteredItems","items","filter","item","date","getFullYear","ConstContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","onChangeYear","_c","$RefreshReg$"],"sources":["C:/Users/xXx/Desktop/JS/udemy-practic/src/components/Costs/Costs.js"],"sourcesContent":["import CostItem from \"../CostItem/CostItem\";\r\nimport CostFilter from \"../CostFilter/CostFilter\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Costs(props) {\r\n  const [selectedYear, setSelectedYear] = useState(\"All\");\r\n\r\n  const yearChangeHandler = (year) => {\r\n    setSelectedYear(year);\r\n    ;\r\n  };\r\n\r\n  const FilteredItems = props.items\r\n    .filter((item) => selectedYear === \"All\" || \r\n    item.date.getFullYear() == selectedYear);\r\n\r\n  let ConstContent = <p>Список пуст. Давай шекели!!!</p>;\r\n\r\n  if(!FilteredItems.length) \r\n    ConstContent = FilteredItems.map((item) => \r\n      <CostItem key={item.id} props={item} />);\r\n\r\n  return (\r\n    <>\r\n      <CostFilter items={props.items} onChangeYear={yearChangeHandler} />\r\n      {ConstContent}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Costs;\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,eAAe,CAACE,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMC,aAAa,GAAGN,KAAK,CAACO,KAAK,CAC9BC,MAAM,CAAEC,IAAI,IAAKP,YAAY,KAAK,KAAK,IACxCO,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,IAAIT,YAAY,CAAC;EAE1C,IAAIU,YAAY,gBAAGhB,OAAA;IAAAiB,QAAA,EAAG;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEtD,IAAG,CAACX,aAAa,CAACY,MAAM,EACtBN,YAAY,GAAGN,aAAa,CAACa,GAAG,CAAEV,IAAI,iBACpCb,OAAA,CAACJ,QAAQ;IAAeQ,KAAK,EAAES;EAAK,GAArBA,IAAI,CAACW,EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgB,CAAC,CAAC;EAE5C,oBACErB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACH,UAAU;MAACc,KAAK,EAAEP,KAAK,CAACO,KAAM;MAACc,YAAY,EAAEjB;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEL,YAAY;EAAA,eACb,CAAC;AAEP;AAACX,EAAA,CAxBQF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}